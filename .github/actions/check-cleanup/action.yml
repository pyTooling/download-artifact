# The MIT License (MIT)
#
# Copyright ¬© 2025 The pyTooling Authors
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
# documentation files (the ‚ÄúSoftware‚Äù), to deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit
# persons to whom the Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the
# Software.
#
# THE SOFTWARE IS PROVIDED ‚ÄúAS IS‚Äù, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
name: Check-Cleanup
description: Check if cleanup removed the temporary tarball.
inputs:
  directory:
    description: Artifact download directory.
    optional: true
    default: '.'
    type: string
  tarball:
    description: Name of the expected tarball.
    type: string
    default: '__pyTooling_upload_artifact__.tar'

runs:
  using: composite
  steps:
    - name: üìã Verify extracted tarball content
      shell: bash
      run: |
          set +e

          ANSI_LIGHT_RED=$'\x1b[91m'
          ANSI_LIGHT_GREEN=$'\x1b[92m'
          ANSI_NOCOLOR=$'\x1b[0m'

          printf "%s\n" "List directory content"
          ls -lAh ${{ inputs.directory }}
          printf "%s\n" "----------------------------------------"


          printf "%s" "Was tarball removed ... "
          if [[ -f ${{ inputs.directory }}/${{ inputs.tarball }} ]]; then
            printf "%s\n" "${ANSI_LIGHT_RED}[FAILED]${ANSI_NOCOLOR}"
            printf "::error title=%s::%s\n" "check-cleanup" "Tarball '${{ inputs.directory }}/${{ inputs.tarball }}' wasn't removed."
            exit 1
          else
            printf "%s\n" "${ANSI_LIGHT_GREEN}[OK]${ANSI_NOCOLOR}"
          fi
