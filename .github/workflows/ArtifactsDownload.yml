# The MIT License (MIT)
#
# Copyright © 2024 The pyTooling Authors
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
# documentation files (the “Software”), to deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit
# persons to whom the Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the
# Software.
#
# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
name: Verification of Preserving Artifact Download

on:
  push:
  workflow_dispatch:

jobs:
  Build-1:
    name: ${{ matrix.os.icon }} Build 1 on ${{ matrix.os.name }} - Upload artifact
    runs-on: ${{ matrix.os.image }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - {icon: '🐧', name: 'Ubuntu',  image: 'ubuntu-24.04'}
          - {icon: '🍏', name: 'macOS',   image: 'macos-14'    }
          - {icon: '🪟', name: 'Windows', image: 'windows-2022'}

    steps:
      - name: ⏬ Checkout repository to use local actions
        uses: actions/checkout@v4

      - uses: ./.github/actions/create-files

      - name: 📤 Upload artifact via 'actions/upload-artifact@v4'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os.name }}-legacy
          path: |
            document1.txt
            *.log
            bin/
            lib/*.py

      - name: 📤 Upload artifact via 'pyTooling/upload-artifact@dev'
        uses: pyTooling/upload-artifact@dev
        with:
          name: ${{ matrix.os.name }}-release-1
          investigate: true
          path: |
            document1.txt
            *.log
            bin/
            lib/*.py

  Build-2:
    name: ${{ matrix.os.icon }} Build 2 on ${{ matrix.os.name }} - Upload artifact
    runs-on: ${{ matrix.os.image }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - {icon: '🐧', name: 'Ubuntu',  image: 'ubuntu-24.04'}
          - {icon: '🍏', name: 'macOS',   image: 'macos-14'    }
          - {icon: '🪟', name: 'Windows', image: 'windows-2022'}

    steps:
      - name: ⏬ Checkout repository to use local actions
        uses: actions/checkout@v4

      - uses: ./.github/actions/create-files

      - name: 📤 Upload artifact via 'pyTooling/upload-artifact@dev'
        uses: pyTooling/upload-artifact@dev
        with:
          name: ${{ matrix.os.name }}-release-2
          investigate: true
          path: |
            document1.txt
            *.log
            bin/
            lib/
          if-no-files-found: error
          retention-days: 1

  Verify-ProjectRoot:
    name: ${{ matrix.os.icon }}⇐${{ matrix.uploader.icon }} Verify on ${{ matrix.os.name }} from ${{ matrix.uploader.name }} - Artifact content
    runs-on: ${{ matrix.os.image }}
    needs:
      - Build-1
    strategy:
      fail-fast: false
      matrix:
        os:
          - {icon: '🐧', name: 'Ubuntu',  image: 'ubuntu-24.04'}
          - {icon: '🍏', name: 'macOS',   image: 'macos-14'    }
          - {icon: '🪟', name: 'Windows', image: 'windows-2022'}
        uploader:
          - {icon: '🐧', name: 'Ubuntu',  image: 'ubuntu-24.04'}
          - {icon: '🍏', name: 'macOS',   image: 'macos-14'    }
          - {icon: '🪟', name: 'Windows', image: 'windows-2022'}

    steps:
      - name: ⏬ Checkout repository to use local actions
        uses: actions/checkout@v4

      - name: 📥 Download artifact '${{ matrix.uploader.name }}-release-1' from ${{ matrix.uploader.name }}
        uses: pyTooling/download-artifact@dev
        with:
          name: ${{ matrix.uploader.name }}-release-1
          investigate: true

      - name: 🔎 Inspect cleanup
        uses: ./.github/actions/check-cleanup
        with:
          directory: '.'

      - name: 📋 Verify extracted artifact content
        uses: ./.github/actions/check-directory-content
        with:
          expected-files: |
            document1.txt
            analysis.log
            build.log
            bin/program.py
            bin/tool.py
            lib/common.py
            lib/shared.py
          unexpected-files: |
            .config
            bin/.settings
            lib/.library
            lib/gui/main.py
            lib/gui/dialog.py

      - name: 📋 Verify file permissions
        uses: ./.github/actions/file-is-executable
        if: matrix.os.name != 'Windows' && matrix.uploader.name != 'Windows'
        with:
          files: |
            bin/program.py
            # bin/tool.py
            lib/common.py
            lib/shared.py

  Verify-SubDirectory:
    name: ${{ matrix.os.icon }}⇐${{ matrix.uploader.icon }} Verify in directory on ${{ matrix.os.name }} from ${{ matrix.uploader.name }} - Artifact content
    runs-on: ${{ matrix.os.image }}
    needs:
      - Build-2
    strategy:
      fail-fast: false
      matrix:
        os:
          - {icon: '🐧', name: 'Ubuntu',  image: 'ubuntu-24.04'}
          - {icon: '🍏', name: 'macOS',   image: 'macos-14'    }
          - {icon: '🪟', name: 'Windows', image: 'windows-2022'}
        uploader:
          - {icon: '🐧', name: 'Ubuntu',  image: 'ubuntu-24.04'}
          - {icon: '🍏', name: 'macOS',   image: 'macos-14'    }
          - {icon: '🪟', name: 'Windows', image: 'windows-2022'}

    steps:
      - name: ⏬ Checkout repository to use local actions
        uses: actions/checkout@v4

      - name: 📥 Download artifact
        uses: pyTooling/download-artifact@dev
        with:
          name: ${{ matrix.uploader.name }}-release-2
          path: myDownload
          investigate: true

      - name: 🔎 Inspect cleanup
        uses: ./.github/actions/check-cleanup
        with:
          directory: 'myDownload'

      - name: 📋 Verify extracted artifact content
        uses: ./.github/actions/check-directory-content
        with:
          expected-files: |
            myDownload/document1.txt
            myDownload/analysis.log
            myDownload/build.log
            myDownload/bin/program.py
            myDownload/bin/tool.py
            myDownload/lib/common.py
            myDownload/lib/shared.py
            myDownload/lib/gui/main.py
            myDownload/lib/gui/dialog.py
          unexpected-files: |
            myDownload/.config
            myDownload/bin/.settings
            myDownload/lib/.library

      - name: 📋 Verify file permissions
        uses: ./.github/actions/file-is-executable
        if: matrix.os.name != 'Windows' && matrix.uploader.name != 'Windows'
        with:
          files: |
            myDownload/bin/program.py
            # myDownload/bin/tool.py
            myDownload/lib/common.py
            myDownload/lib/shared.py

  Verify-MultipleArtifacts:
    name: ${{ matrix.os.icon }}⇐${{ matrix.uploader.icon }} Verify multiple on ${{ matrix.os.name }} from ${{ matrix.uploader.name }} - Artifact content
    runs-on: ${{ matrix.os.image }}
    needs:
      - Build-1
      - Build-2
    strategy:
      fail-fast: false
      matrix:
        os:
          - {icon: '🐧', name: 'Ubuntu',  image: 'ubuntu-24.04'}
          - {icon: '🍏', name: 'macOS',   image: 'macos-14'    }
          - {icon: '🪟', name: 'Windows', image: 'windows-2022'}
        uploader:
          - {icon: '🐧', name: 'Ubuntu',  image: 'ubuntu-24.04'}
          - {icon: '🍏', name: 'macOS',   image: 'macos-14'    }
          - {icon: '🪟', name: 'Windows', image: 'windows-2022'}

    steps:
      - name: ⏬ Checkout repository to use local actions
        uses: actions/checkout@v4

      - name: 📥 Download artifact
        uses: pyTooling/download-artifact@dev
        with:
          pattern: ${{ matrix.uploader.name }}-release-*
          path: myDownload
          investigate: true

      - name: 🔎 Inspect cleanup of '${{ matrix.uploader.name }}-release-1'
        uses: ./.github/actions/check-cleanup
        with:
          directory: myDownload/${{ matrix.uploader.name }}-release-1

      - name: 🔎 Inspect cleanup of '${{ matrix.uploader.name }}-release-2'
        uses: ./.github/actions/check-cleanup
        with:
          directory: myDownload/${{ matrix.uploader.name }}-release-2

      - name: 📋 Verify extracted artifact content
        uses: ./.github/actions/check-directory-content
        with:
          expected-files: |
            myDownload/${{ matrix.uploader.name }}-release-1/document1.txt
            myDownload/${{ matrix.uploader.name }}-release-1/analysis.log
            myDownload/${{ matrix.uploader.name }}-release-1/build.log
            myDownload/${{ matrix.uploader.name }}-release-1/bin/program.py
            myDownload/${{ matrix.uploader.name }}-release-1/bin/tool.py
            myDownload/${{ matrix.uploader.name }}-release-1/lib/common.py
            myDownload/${{ matrix.uploader.name }}-release-1/lib/shared.py
            myDownload/${{ matrix.uploader.name }}-release-2/document1.txt
            myDownload/${{ matrix.uploader.name }}-release-2/analysis.log
            myDownload/${{ matrix.uploader.name }}-release-2/build.log
            myDownload/${{ matrix.uploader.name }}-release-2/bin/program.py
            myDownload/${{ matrix.uploader.name }}-release-2/bin/tool.py
            myDownload/${{ matrix.uploader.name }}-release-2/lib/common.py
            myDownload/${{ matrix.uploader.name }}-release-2/lib/shared.py
          unexpected-files: |
            myDownload/${{ matrix.uploader.name }}-release-1/.config
            myDownload/${{ matrix.uploader.name }}-release-1/bin/.settings
            myDownload/${{ matrix.uploader.name }}-release-1/lib/.library
            myDownload/${{ matrix.uploader.name }}-release-1/lib/gui/main.py
            myDownload/${{ matrix.uploader.name }}-release-1/lib/gui/dialog.py
            myDownload/${{ matrix.uploader.name }}-release-2/.config
            myDownload/${{ matrix.uploader.name }}-release-2/bin/.settings
            myDownload/${{ matrix.uploader.name }}-release-2/lib/.library

      - name: 📋 Verify file permissions
        uses: ./.github/actions/file-is-executable
        if: matrix.os.name != 'Windows' && matrix.uploader.name != 'Windows'
        with:
          files: |
            myDownload/${{ matrix.uploader.name }}-release-1/bin/program.py
            # myDownload/${{ matrix.uploader.name }}-release-1/bin/tool.py
            myDownload/${{ matrix.uploader.name }}-release-1/lib/common.py
            myDownload/${{ matrix.uploader.name }}-release-1/lib/shared.py
            myDownload/${{ matrix.uploader.name }}-release-2/bin/program.py
            # myDownload/${{ matrix.uploader.name }}-release-2/bin/tool.py
            myDownload/${{ matrix.uploader.name }}-release-2/lib/common.py
            myDownload/${{ matrix.uploader.name }}-release-2/lib/shared.py

  Verify-legacy:
    name: ${{ matrix.os.icon }}⇐${{ matrix.uploader.icon }} Verify legacy upload on ${{ matrix.os.name }} from ${{ matrix.uploader.name }}
    runs-on: ${{ matrix.os.image }}
    needs:
      - Build-1
    strategy:
      fail-fast: false
      matrix:
        os:
          - {icon: '🐧', name: 'Ubuntu',  image: 'ubuntu-24.04'}
          - {icon: '🍏', name: 'macOS',   image: 'macos-14'    }
          - {icon: '🪟', name: 'Windows', image: 'windows-2022'}
        uploader:
          - {icon: '🐧', name: 'Ubuntu',  image: 'ubuntu-24.04'}
          - {icon: '🍏', name: 'macOS',   image: 'macos-14'    }
          - {icon: '🪟', name: 'Windows', image: 'windows-2022'}

    steps:
      - name: ⏬ Checkout repository to use local actions
        uses: actions/checkout@v4

      - name: 📥 Download artifact
        uses: pyTooling/download-artifact@dev
        with:
          name: ${{ matrix.uploader.name }}-legacy
          investigate: true

      - name: 📋 Verify extracted artifact content
        uses: ./.github/actions/check-directory-content
        with:
          expected-files: |
            document1.txt
            analysis.log
            build.log
            bin/program.py
            bin/tool.py
            lib/common.py
            lib/shared.py
          unexpected-files: |
            .config
            bin/.settings
            lib/.library
            lib/gui/main.py
            lib/gui/dialog.py
