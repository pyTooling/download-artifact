name: Download (preserving) Artifact(s)
description: Download the artifact(s) with preserved file privileges which were previously uploaded by the 'upload-artifact' action.
author: Patrick Lehmann (@Paebbels)

inputs:
  name:
    description: |
      Name of the artifact to download.
      If unspecified, all artifacts for the run are downloaded.
      Optional.
    required: false
  path:
    description: |
      Destination path. Supports basic tilde expansion.
      Optional. Default is $GITHUB_WORKSPACE
    required: false
  pattern:
    description: |
      A glob pattern to the artifacts that should be downloaded.
      Ignored if name is specified.
      Optional.
    required: false
  merge-multiple:
    description: |
      When multiple artifacts are matched, this changes the behavior of the destination directories.
      If true, the downloaded artifacts will be in the same directory specified by path.
      If false, the downloaded artifacts will be extracted into individual named directories within the specified path.
      Optional. Default is 'false'
    type: boolean
    required: false
    default: false
  github-token:
    description: |
      The GitHub token used to authenticate with the GitHub API.
      This is required when downloading artifacts from a different repository or from a different workflow run.
      Optional. If unspecified, the action will download artifacts from the current repo and the current workflow run.
    required: false
  repository:
    description: |
      The repository owner and the repository name joined together by "/".
      If github-token is specified, this is the repository that artifacts will be downloaded from.
      Optional.
#      Default is ${{ github.repository }}
    required: false
  run-id:
    description: |
      The id of the workflow run where the desired download artifact was uploaded from.
      If github-token is specified, this is the run that artifacts will be downloaded from.
      Optional.
#      Default is ${{ github.run_id }}
    required: false
  temp_tarball:
    type: string
    required: false
    default: '__upload_artifact__.tar'

outputs:
  download-path:
    description: Absolute path where the artifact(s) were downloaded.
    value: ${{ steps.download.outputs.download-path }}

runs:
  using: composite
  steps:
    # https://github.com/actions/download-artifact
    - name: Download artifact
      uses: actions/download-artifact@v4
      id: download
      with:
        name: ${{ inputs.name }}
        path: ${{ inputs.path }}

    - name: Extract tarball content(s)
      shell: bash
      working-directory: ${{ inputs.path }}
      run: |
        set +e

        ANSI_LIGHT_RED="\e[91m"
        ANSI_LIGHT_GREEN="\e[92m"
        ANSI_NOCOLOR="\e[0m"

        if [[ "${{ inputs.name }}" == "" ]]; then
          artifactDirectories=(*/)
        else
          artifactDirectories=(.)
        fi

        for artifactDirectory in "${artifactDirectories[@]}"; do
          pushd "${artifactDirectory}" > /dev/null
        
          echo -n "Extracting tarball '${artifactDirectory}/${{ inputs.temp_tarball }}' ... "
          tar -xf "${{ inputs.temp_tarball }}"
          if [[ $? -ne 0 ]]; then
            echo -e "${ANSI_LIGHT_RED}[FAILED]${ANSI_NOCOLOR}"
          else
            echo -e "${ANSI_LIGHT_GREEN}[OK]${ANSI_NOCOLOR}"
          fi
          
          popd > /dev/null
        done

    - name: Remove temporary tarball
      id: cleanup
      shell: bash
      run: |
        set +e

        ANSI_LIGHT_RED="\e[91m"
        ANSI_LIGHT_GREEN="\e[92m"
        ANSI_NOCOLOR="\e[0m"
        
        echo -n "Removing temporary tarball(s) ... "
        rm -f "${{ inputs.temp_tarball }}"
        if [[ $? -ne 0 ]]; then
          echo -e "${ANSI_LIGHT_RED}[FAILED]${ANSI_NOCOLOR}"
        else
          echo -e "${ANSI_LIGHT_GREEN}[OK]${ANSI_NOCOLOR}"
        fi
